{
  __meta__: {
    author: 'mihaiberq',
    source: 'https://github.com/enkidevs/curriculum/blob/master/web/styling/positioning/positioning-elements.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'must-know',
  ],
  card: {
    question: '<p>For which value of <code>position</code> you cannot use box offsets?</p>\n<p>???</p>\n',
    answers: [
      {
        text: 'Static',
      },
      {
        text: 'Relative',
      },
      {
        text: 'Absolute',
      },
    ],
    comment: '<p>Now that you can tell how much space an element takes when rendered based on its properties, the next step is to position it in the page layout. Three <em>basic</em> ways to position elements are: <em>relative positioning</em>, <em>absolute positioning</em> and <em>floating</em> them.</p>\n<p>By default every element has a <code>position</code> value of <code>static</code>, which places it in the normal flow of the page. However, the static element <em>does not</em> accept any box offset properties: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>. To take advantage of the offsets, one must overwrite the <code>static</code> value with either <code>relative</code> or <code>absolute</code>.</p>\n<h3>Relative positioning</h3>\n<p>The <code>relative</code> value of the <code>position</code> property places elements in the normal flow of the page, while allowing access to the box offsets:</p>\n<pre><code class="language-css">div{\n  width:200px;\n  height: 100px;\n}\n#relpos{\n  position: relative;\n  left: 15px;\n  top:15px;\n}\n</code></pre>\n<p>And the HTML:</p>\n<pre><code class="language-html">&#x3C;div> Static&#x3C;/div>\n&#x3C;div id="relpos">Relative&#x3C;/div>\n&#x3C;div> Static&#x3C;/div>\n</code></pre>\n<p><svg height="auto" viewBox="0 0 810 360" xmlns="http://www.w3.org/2000/svg" version="1.2" baseProfile="tiny"><desc>Created by HiQPdf</desc><g fill="none" stroke="#000" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><path d="M8 8h800v350H8V8" fill="#596193" stroke="none"/><path d="M33 13h200v110H33V13M33 243h200v110H33V243" fill="#fff" stroke="none"/><text stroke="none" x="96" y="74" font-family="&#x27;Roboto&#x27;,sans-serif" font-size="30" font-weight="400" fill="#000">Static</text><text stroke="none" x="96" y="304" font-family="&#x27;Roboto&#x27;,sans-serif" font-size="30" font-weight="400" fill="#000">Static</text><path d="M53 148h200v110H53V148" fill="#3ed715" stroke="none"/><text stroke="none" x="99.5" y="209" font-family="&#x27;Roboto&#x27;,sans-serif" font-size="30" font-weight="400" fill="#000">Relative</text></g></svg></p>\n<p>The difference between <code>margin</code> and <code>padding</code> and <em>offsets</em> is that instead of pushing the surrounding elements, <em>box offsets</em> will make them overlap.</p>\n<h3>Absolute positioning</h3>\n<p>On the other hand, the <code>absolute</code> value of <code>position</code> will make the element appear outside of the normal flow of the page.</p>\n<p>Additionally, <em>box offsets</em> move them in relation to the first <code>non-static</code> positioned parent. In case such a parent does not exist, the element will use the <code>&#x3C;body></code> as reference.</p>\n<pre><code class="language-css">#container{\n  background-color:white;\n  position:relative;\n#relpos{\n  position: absolute;\n  left: 20px;\n  top:20px;\n}\n</code></pre>\n<p><svg height="auto" viewBox="0 0 810 310" xmlns="http://www.w3.org/2000/svg" version="1.2" baseProfile="tiny"><desc>Created by HiQPdf</desc><g fill="none" stroke="#000" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel"><path d="M8 8h800v300H8V8" fill="#596193" stroke="none"/><path d="M108 58h600v200H108V58" fill="#fff" stroke="none"/><text stroke="none" x="508" y="161" font-family="&#x27;Roboto&#x27;,sans-serif" font-size="30" font-weight="400" fill="#000">Relative</text><path d="M128 78h200v110H128V78" fill="#3ed715" stroke="none"/><text stroke="none" x="170.5" y="139" font-family="&#x27;Roboto&#x27;,sans-serif" font-size="30" font-weight="400" fill="#000">Absolute</text></g></svg></p>\n<p>The third basic way of position elements, <em>floating</em>, will be covered in the next insight.</p>\n',
  },
}
{
  __meta__: {
    author: 'nene',
    source: 'https://github.com/enkidevs/curriculum/blob/master/web/styling/positioning-tips/clearfix-for-layouts.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'pattern',
    'layout',
  ],
  card: {
    question: '<p>What does <code>clear</code> property do?</p>\n<p>???</p>\n',
    answers: [
      {
        text: 'It doesn’t allow float elements on specified sides.',
      },
      {
        text: 'It doesn’t allow any type of elements on specified sides.',
      },
      {
        text: 'It allows float elements on specified sides.',
      },
    ],
    comment: '<p>Use <code>clearfix</code> to make an element automatically clear its child elements, so there would be no need for additional markup :</p>\n<pre><code class="language-css">.clearfix:after {\n  content: "";\n  clear: both;\n}\n</code></pre>\n<p>This hack is useful in cases like where <code>float</code> is used to arrange elements one after the other. Because of how <code>floats</code> work (they make other elements wrap around them), their container won\'t resize to surround them.</p>\n<p>Here is an example, where the left child has <code>float:left</code> property, and the right one, <code>float:right</code>:</p>\n<p><img src="%3Csvg%20version%3D%221.2%22%20baseProfile%3D%22tiny%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20height%3D%22auto%22%20viewBox%3D%220%200%20800%20300%22%3E%0A%20%20%3Cpath%20fill%3D%22%23596294%22%20stroke%3D%22%23000%22%20stroke-width%3D%22.25%22%20stroke-miterlimit%3D%2210%22%20d%3D%22M0%200h800v300H0z%22%2F%3E%0A%20%20%3Cpath%20fill%3D%22%23FFF%22%20stroke%3D%22%23000%22%20stroke-width%3D%22.25%22%20stroke-miterlimit%3D%2210%22%20d%3D%22M44%2015h350v70H44z%22%2F%3E%0A%20%20%3Cpath%20fill%3D%22%239FA6D4%22%20stroke%3D%22%23000%22%20stroke-width%3D%22.25%22%20stroke-miterlimit%3D%2210%22%20d%3D%22M62%2044h50v150H62zM250%2044h90v90h-90z%22%2F%3E%0A%20%20%3Cpath%20fill%3D%22%23FFF%22%20stroke%3D%22%23000%22%20stroke-width%3D%22.25%22%20stroke-miterlimit%3D%2210%22%20d%3D%22M410%2015h350v210H410z%22%2F%3E%0A%20%20%3Cpath%20fill%3D%22%239FA6D4%22%20stroke%3D%22%23000%22%20stroke-width%3D%22.25%22%20stroke-miterlimit%3D%2210%22%20d%3D%22M430%2044h50v150h-50zM620%2044h90v90h-90z%22%2F%3E%0A%20%20%3Cpath%20fill%3D%22none%22%20d%3D%22M87%2028h106.283v17.277H87z%22%2F%3E%0A%20%20%3Ctext%20x%3D%22150%22%20y%3D%2242%22%20font-family%3D%22&#x27;Roboto-Regular&#x27;%22%20font-size%3D%2230%22%3E%0A%20%20%20%20no%20clearfix%0A%20%20%3C%2Ftext%3E%0A%20%20%3Cpath%20fill%3D%22none%22%20d%3D%22M430%2028.936h73.299V45.69H430z%22%2F%3E%0A%20%20%3Ctext%20x%3D%22530%22%20y%3D%2242%22%20font-family%3D%22&#x27;Roboto-Regular&#x27;%22%20font-size%3D%2230%22%3E%0A%20%20%20%20clearfix%0A%20%20%3C%2Ftext%3E%0A%3C%2Fsvg%3E" alt="newclearfix.svg"></p>\n<p>All you have to do is add <code>clearfix</code> class to the container and the floating element:</p>\n<pre><code class="language-html">&#x3C;div class="clearfix">\n   &#x3C;div style="float: left;"\n   class="clearfix">Sidebar&#x3C;/div>\n&#x3C;/div>\n</code></pre>\n<p>The hack forces the content after the floats to render below them (<code>clear</code> property specifies on which side of the element floating elements are not allowed).</p>\n<p>Now, the parent will resize itself to surround the floating children.</p>\n',
  },
}
{
  __meta__: {
    author: 'Billiexu',
    source: 'https://github.com/enkidevs/curriculum/blob/master/web/styling/flexbox/flexbox-justify-content.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'feature',
    'css',
    'flexbox',
  ],
  card: {
    question: '<p>Which of the following <code>justify-content</code> values will display items evenly distributed, with the first item positioned near margin of the container?</p>\n<pre><code class="language-css">.flex-container{\n  justify-content:\n            ???;\n}\n</code></pre>\n',
    answers: [
      {
        text: 'space-between',
      },
      {
        text: 'space-around',
      },
      {
        text: 'center',
      },
      {
        text: 'flex-start',
      },
    ],
    comment: '<p>In Flexbox, there are many useful values for <code>justify-content</code> property. <code>space-between</code> and <code>space-around</code> are the most helpful two to distribute elements along the <code>flex-direction</code> <em>(x-axis by default)</em>:</p>\n<p>HTML:</p>\n<pre><code class="language-html">&#x3C;div class="parent">\n  &#x3C;div class="child-1">Child 1&#x3C;/div>\n  &#x3C;div class="child-2">Child 2&#x3C;/div>\n  &#x3C;div class="child-3">Child 3&#x3C;/div>\n&#x3C;/div>\n</code></pre>\n<p><code>space-between</code> distributes child elements across the width of the parent container with the starting and ending elements <em>fixed to the sides of the parent container</em>.</p>\n<pre><code class="language-css">.parent{\n  width:100%;\n  display:flex;\n  justify-content: space-between\n}\n</code></pre>\n<p><svg version="1.2" baseProfile="tiny" xmlns="http://www.w3.org/2000/svg" height="auto" viewBox="0 0 612 200"> <path fill="#596193" stroke="#596193" stroke-miterlimit="10" d="M0 0h612v200H0z"/> <path fill="#FFF" stroke="#596193" stroke-miterlimit="10" d="M495 50h100v100H495zM15 50h100v100H15zM264 50h100v100H264z"/> <path fill="#FFF" stroke="#000" stroke-miterlimit="10" d="M0 199.674"/></svg></p>\n<p><code>space-around</code> gives each element the same amount of space on its left and right across the width of the container, and the starting and ending elements are not necessarily fixed to the sides of the parent container.</p>\n<pre><code class="language-css">.parent{\n  justify-content: space-around\n}\n</code></pre>\n<p><svg version="1.2" baseProfile="tiny" xmlns="http://www.w3.org/2000/svg" height="auto" viewBox="0 0 612 200"> <path fill="#596193" stroke="#596193" stroke-miterlimit="10" d="M0 0h612v200H0z"/> <path fill="#FFF" stroke="#596193" stroke-miterlimit="10" d="M460 50h100v100H460zM50 50h100v100H50zM250 50h100v100H250z"/> <path fill="#FFF" stroke="#000" stroke-miterlimit="10" d="M0 199.674"/></svg></p>\n',
  },
}
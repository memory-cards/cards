{
  __meta__: {
    author: 'oj14henry',
    source: 'https://github.com/enkidevs/curriculum/blob/master/web/styling/css-animation/manipulating-shapes-using-css-border.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'hack',
    'border',
    'shapes',
  ],
  card: {
    question: '<p>What shape would the following CSS produce? ???</p>\n<pre><code class="language-css">#shape {\n   width: 0;\n   height: 0;\n   border-left: 80px solid transparent;\n   border-right: 80px solid transparent;\n   border-top: 80px solid red;\n   border-bottom: 80px solid transparent;\n}\n</code></pre>\n',
    answers: [
      {
        text: 'A triangle.',
      },
      {
        text: 'A square.',
      },
      {
        text: 'A circle.',
      },
      {
        text: 'A rectangle.',
      },
    ],
    comment: '<p>You can make shapes by defining the properties of the <code>border</code>, as seen below:</p>\n<pre><code class="language-css">#triangle {\n  width: 0;\n  height: 0;\n  border-left: 80px solid white;\n  border-right: 80px solid transparent;\n  border-top: 80px solid transparent;\n  border-bottom: 80px solid transparent;\n}\n</code></pre>\n<p>By setting the <code>background</code> of three <code>borders</code> to be <code>transparent</code>, the shape of a triangle is mimicked.</p>\n<p>For the following image, these are the borders that are not transparent:</p>\n<ul>\n<li><strong>A</strong> : <em>border-left</em> (code snippet above)</li>\n<li><strong>B</strong> : <em>border-right</em></li>\n<li><strong>C</strong> : <em>border-top</em></li>\n<li><strong>D</strong> : <em>border-bottom</em></li>\n</ul>\n<p><?xml version="1.0" encoding="UTF-8" standalone="no"?><svg width="100%" height="auto" viewBox="0 0 810 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.2" baseProfile="tiny"><desc>Created by HiQPdf</desc><defs></defs><g fill="none" stroke="black" stroke-width="1" fill-rule="evenodd" stroke-linecap="square" stroke-linejoin="bevel" ><g fill="#596193" fill-opacity="1" stroke="none" transform="matrix(1,0,0,1,0,0)"><path vector-effect="none" fill-rule="evenodd" d="M8,8 L808,8 L808,308 L8,308 L8,8"/></g><g fill="#ffffff" fill-opacity="1" stroke="none" transform="matrix(1,0,0,1,0,0)"><path vector-effect="none" fill-rule="evenodd" d="M98,28 L98,288 L228,158 L98,28"/><text x="130" y="175" fill="#000000" font-size="50" font-family="&#x27;Roboto&#x27;,sans-serif">A</text></g><g fill="#ffffff" fill-opacity="1" stroke="none" transform="matrix(1,0,0,1,0,0)"><path vector-effect="none" fill-rule="evenodd" d="M228,158 L358,288 L358,28 L228,158"/><text x="290" y="175" fill="#000000" font-size="50" font-family="&#x27;Roboto&#x27;,sans-serif">B</text></g><g fill="#ffffff" fill-opacity="1" stroke="none" transform="matrix(1,0,0,1,0,0)"><path vector-effect="none" fill-rule="evenodd" d="M578,158 L448,288 L708,288 L578,158"/><text x="560" y="250" fill="#000000" font-size="50" font-family="&#x27;Roboto&#x27;,sans-serif">D</text></g><g fill="#ffffff" fill-opacity="1" stroke="none" transform="matrix(1,0,0,1,0,0)"><path vector-effect="none" fill-rule="evenodd" d="M448,28 L578,158 L708,28 L448,28"/><text x="560" y="100" fill="#000000" font-size="50" font-family="&#x27;Roboto&#x27;,sans-serif">C</text></g></g></svg></p>\n',
  },
}
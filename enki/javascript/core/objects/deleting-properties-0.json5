{
  __meta__: {
    author: 'pawel',
    source: 'https://github.com/enkidevs/curriculum/blob/master/javascript/core/objects/deleting-properties.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'how to',
    'introduction',
  ],
  card: {
    question: '<p>Complete the code snippet:</p>\n<pre><code class="language-javascript">var test = {\n  prop1: 1,\n  prop2: 2\n}\n// set prop1 to undefined\ntest.prop1 = ???;\n//remove prop2\n??? ;\n</code></pre>\n',
    answers: [
      {
        text: 'undefined',
      },
      {
        text: 'delete test.prop2',
      },
      {
        text: 'null',
      },
      {
        text: 'delete prop2',
      },
    ],
    comment: '<p>Setting the property to <code>null</code> or <code>undefined</code> only removes the value associated with given property. It does not remove the key.</p>\n<pre><code>var obj = { one: 1 }\n</code></pre>\n<p>Setting to <code>undefined</code>:</p>\n<pre><code>obj.one = undefined;\nconsole.log(obj); // { one: undefined }\n</code></pre>\n<p>Setting to <code>null</code>:</p>\n<pre><code>obj.one = null;\nconsole.log(obj); // { one: null }\n</code></pre>\n<p>To delete:</p>\n<pre><code>delete obj.one;\nconsole.log(obj); // { }\n</code></pre>\n<p>Using the <code>delete</code> operator returns <code>true</code> for all cases except when the property is an own non-configurable property, in which case, <code>false</code> is returned in non-strict mode.</p>\n',
  },
}
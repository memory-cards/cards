{
  __meta__: {
    author: 'Dral',
    source: 'https://github.com/enkidevs/curriculum/blob/master/javascript/core/array-methods/apply-map-function-to-array-items.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'must-know',
    'functional-programming arrays',
    'introduction',
    'workout',
    'deep',
  ],
  card: {
    question: '<p>Which of these <code>Array</code> methods will produce an array of the same length, after applying a function to each element? ???</p>\n',
    answers: [
      {
        text: 'map()',
      },
      {
        text: 'filter()',
      },
      {
        text: 'splice()',
      },
      {
        text: 'reduce()',
      },
    ],
    comment: "<p>Using <code>.map</code> will apply a function to every element in the array, and return an array with the results.  </p>\n<pre><code>[1,2,3,4].map(x => x * 2)\n// => [2,4,6,8]\n</code></pre>\n<p>This is not limited to simple transformations.  Any features of functions can be used within a <code>mapper function</code>.</p>\n<pre><code>['Jake', 'Jack', 'Mike'].map(\n  name => `Hello ${name}`\n)\n\n// ['Hello Jake',\n//  'Hello Jack,\n//  'Hello Mike']\n</code></pre>\n",
  },
}
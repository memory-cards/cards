{
  __meta__: {
    author: 'tommarshall',
    source: 'https://github.com/enkidevs/curriculum/blob/master/javascript/core/functions-iii/changing-a-functions-context-with-fn-call-object.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'must-know',
  ],
  card: {
    question: '<p>Using the .???() method will change the ??? context of a JavaScript function call</p>\n',
    answers: [
      {
        text: '<code>call</code>',
      },
      {
        text: '<code>this</code>',
      },
      {
        text: '<code>context</code>',
      },
      {
        text: '<code>scope</code>',
      },
    ],
    comment: '<p><code>fn.call()</code> allows you to call a function and provide an alternative value for the functions <em>this</em> context.</p>\n<p>The first argument <code>fn.call()</code> accepts is the alternative <em>this</em> context and any following arguments are passed as parameters. </p>\n<p>The code below defines a <em>discount</em> of <em>10</em> that will be retrieved within <em>getDiscount</em> via a call to <code>this.discount</code>:</p>\n<pre><code class="language-javascript">var discountCalc= {\n    discount: 10,\n    getDiscount: function(input){\n      return this.discount + input;\n    }\n}\n\ndiscountCalc.getDiscount(1); //11\n</code></pre>\n<p>Imagine we want to supply a bigger discount. </p>\n<p>We can use <code>fn.call</code> to override discountCalculators <em>discount</em> by supplying an alternative <em>this</em> context:</p>\n<pre><code>discountCalc\n.getDiscount\n.call({discount: 100},1); //101\n</code></pre>\n',
  },
}
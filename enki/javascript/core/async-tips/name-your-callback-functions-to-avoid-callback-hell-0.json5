{
  __meta__: {
    author: 'Bruno',
    source: 'https://github.com/enkidevs/curriculum/blob/master/javascript/core/async-tips/name-your-callback-functions-to-avoid-callback-hell.md',
  },
  type: 'choose_options',
  lang: 'en',
  tags: [
    'enki',
    'best practice',
  ],
  card: {
    question: '<p>Which of the following statements about naming your callback functions do you consider false?</p>\n<p>???</p>\n',
    answers: [
      {
        text: 'they can minimise the memory used by your application',
        correct: true,
      },
      {
        text: 'they make your code more readable',
        correct: false,
      },
      {
        text: 'they can help you avoid callback hell',
        correct: false,
      },
      {
        text: 'they can make your code more intuitive',
        correct: false,
      },
    ],
    comment: "<p>Instead of:</p>\n<pre><code class=\"language-javascript\">setTimeout(function(){\n  console.log('greeting 1');\n  setTimeout(function(){\n    console.log('greeting 2');\n  },1000);\n},1000);\n</code></pre>\n<p>Prefer:</p>\n<pre><code class=\"language-javascript\">function greeting1() {\n  console.log('greeting 1');\n  setTimeout(greeting2, 1000);\n}\nfunction greeting2() {\n  console.log('greeting 2');\n}\nsetTimeout(greeting1, 1000);\n</code></pre>\n<p>This makes code easier to read and, when exceptions happen, stack traces that reference function names will be much easier to work with.</p>\n<p>This  also allows you to keep your code shallow which makes it more intuitive for editing and refactoring later.</p>\n",
  },
}
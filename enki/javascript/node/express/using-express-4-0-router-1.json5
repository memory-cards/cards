{
  __meta__: {
    author: 'catalin',
    source: 'https://github.com/enkidevs/curriculum/blob/master/javascript/node/express/using-express-4-0-router.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'must-know',
  ],
  card: {
    question: "<p>Create <code>simple</code> route:</p>\n<pre><code class=\"language-javascript\">app.???('/simple', function(req, res) {\n  ???.???('Simple route accessed!');\n</code></pre>\n",
    answers: [
      {
        text: 'get',
      },
      {
        text: 'res',
      },
      {
        text: 'send',
      },
      {
        text: 'use',
      },
      {
        text: 'req',
      },
      {
        text: 'app',
      },
      {
        text: 'router',
      },
    ],
    comment: "<p>The router in <strong>Express</strong> acts like a mini express application that doesn't bring in views, settings and so on, yet provides us with routing APIs.</p>\n<p> <strong>Express 4.0</strong> introduces a new <code>Router</code> whose API looks like this:</p>\n<p>Creating a simple route:</p>\n<pre><code class=\"language-javascript\">app.get('/simple', function(req, res) {\n  res.send('Simple route accessed!');\n});\n</code></pre>\n<p>Creating multiple routes:</p>\n<pre><code class=\"language-javascript\">var router = express.Router();\nrouter.get('/', function(req, res) {\n    res.send('first page');\n});\nrouter.get('/enki', function(req, res) {\n    res.send('enki page');\n});\n</code></pre>\n<p>Applying the routes:</p>\n<pre><code class=\"language-javascript\">app.use('/', router);\n</code></pre>\n<p><code>router.use()</code> is used to define middleware:</p>\n<pre><code class=\"language-javascript\">router.use(function(req,res,next) {\n  console.log(req.method, req.url);\n  next();\n});\n</code></pre>\n",
  },
}
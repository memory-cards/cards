{
  __meta__: {
    author: 'rosielowther',
    source: 'https://github.com/enkidevs/curriculum/blob/master/javascript/node/error-handling/handle-json-parse-error-in-node-js.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'caveats',
    'introduction',
    'workout',
  ],
  card: {
    question: "<p>What is required when you're handling a <code>JSON.parse</code> error in Node? </p>\n<p>???</p>\n",
    answers: [
      {
        text: 'a try/catch',
      },
      {
        text: 'an if statement',
      },
      {
        text: 'a loop',
      },
      {
        text: 'an error message',
      },
    ],
    comment: "<p>Handling a <code>JSON.parse</code> error is one of the few situations when you'd use a <code>try/catch</code> in Node.</p>\n<p>This is because <strong>synchronous operational errors</strong> are very rare in Node and only occur due to bad user input. <code>JSON.parse</code> is a synchronous function and you have to deliver the error synchronously.</p>\n<p>For example:</p>\n<pre><code>webSocket.on('msg', function (msg) {\n  var msgObj;\n  try {\n    msgObj = JSON.parse(msg);\n  } catch (e) {\n    return console.error(e);\n  }\n}\n</code></pre>\n",
  },
}
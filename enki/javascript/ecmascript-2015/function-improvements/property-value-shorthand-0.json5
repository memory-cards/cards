{
  __meta__: {
    author: 'alexjmackey',
    source: 'https://github.com/enkidevs/curriculum/blob/master/javascript/ecmascript-2015/function-improvements/property-value-shorthand.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'must-know',
  ],
  card: {
    question: "<p>What will be logged by the following snippet:</p>\n<pre><code class=\"language-javascript\">function bar() {\n  var foo = 'b'\n  this.foo = 'a'\n  return {\n    foo\n  }\n}\nconsole.log(bar())\n// ???\n</code></pre>\n",
    answers: [
      {
        text: "{ foo: 'b' }",
      },
      {
        text: "'b'",
      },
      {
        text: "'a'",
      },
      {
        text: "{ foo: 'a' }",
      },
      {
        text: 'error',
      },
      {
        text: 'foo',
      },
    ],
    comment: '<p>It is very common to return an object from a function with a property the same name as a source value declared elsewhere e.g.</p>\n<pre><code class="language-javascript">function test(){\n   var name="Enki";\n\n   return {\n      name: name\n   }\n}\n</code></pre>\n<p>ES6 provides a convenient shortcut to do this that allows you to drop the property name if you want it to be the same as the source variable:</p>\n<pre><code class="language-javascript">function test(){\n   var name = "enki";\n\n   return {\n      name\n   };\n}\n\ntest(); // { name: "enki" }\n</code></pre>\n<p>Note an exception will be thrown at run time if you specify a value that doesnâ€™t exist in your return object.</p>\n',
  },
}
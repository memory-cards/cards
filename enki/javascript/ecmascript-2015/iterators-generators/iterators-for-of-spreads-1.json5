{
  __meta__: {
    author: 'gregbenner',
    source: 'https://github.com/enkidevs/curriculum/blob/master/javascript/ecmascript-2015/iterators-generators/iterators-for-of-spreads.md',
  },
  type: 'choose_options',
  lang: 'en',
  tags: [
    'enki',
    'must-know',
  ],
  card: {
    question: '<pre><code class="language-javascript">// Given:\n\nvar greeting = "hi";\nlet iterator =\n  greeting[Symbol.iterator]();\n\niterator.next();\n// returns ???\n</code></pre>\n<p>%exp\n*<em>ES6</em></p>\n<p>Underneath, the <code>for...of</code> loop is implemented using this specification.</p>\n<p>While calling <code>greeting[Symbol.iterator]()</code>, the <code>"hi"</code> string is converted to an array of characters and then converted to an iterator, that will yield each array value together with a <code>done</code> property in a object. The latter will be equal to <code>true</code> when the iteration is done (i.e. the next <code>next()</code> call will result in <code>{ value: "i", done: true }</code>).\n%</p>\n',
    answers: [
      {
        text: '{ value: "h", done: false }',
        correct: true,
      },
      {
        text: '["h", false]',
        correct: false,
      },
      {
        text: '{ value: "h", done: true }',
        correct: false,
      },
      {
        text: 'spec defines non-string **symbol** property names of objects to describe particular behaviours, <code>Symbol.iterator</code> specifically describing how iteration works.',
        correct: false,
      },
    ],
    comment: "<p>Freshen up you knowledge on <code>iterators</code>, <code>for of</code> loops and the <code>spread operator</code> with this exercise.\nThe goal is to fill in the gaps with either the output of the snippet or the missing bit that won't throw any errors.</p>\n",
  },
}
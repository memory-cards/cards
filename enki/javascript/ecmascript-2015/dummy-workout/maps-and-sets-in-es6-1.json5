{
  __meta__: {
    author: 'rosielowther',
    source: 'https://github.com/enkidevs/curriculum/blob/master/javascript/ecmascript-2015/dummy-workout/maps-and-sets-in-es6.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'feature',
  ],
  card: {
    question: '<p>Are *<em>Sets</em></p>\n<p>???</p>\n',
    answers: [
      {
        text: 'and **Maps** iterable?',
      },
      {
        text: 'yes',
      },
      {
        text: 'no',
      },
    ],
    comment: "<p>ES6 introduces useful new data structures <code>Map</code> and <code>Set</code>.</p>\n<p>The <code>Map</code> data structure lets you <strong>map</strong> values to values. You can use arbitrary values, including objects, as keys:</p>\n<pre><code>let map = new Map();\nconst KEY1 = {};\nmap.set(KEY1, 'Enki'); // key = 'Enki'\n</code></pre>\n<p>The <code>Set</code> data structure:</p>\n<pre><code>let set = new Set();\nset.add('Enki')\nset.has('Enki') // true\n</code></pre>\n<p>Sets and Maps are <strong>iterable</strong> so can be processed using the <code>for...of</code> loop and <code>spread</code> operator.</p>\n<p>You can't <code>map()</code> or <code>filter()</code> Maps or Sets. A workaround is to convert the Map/Set into an array, perform the operation and convert back.</p>\n",
  },
}
{
  __meta__: {
    author: 'rosielowther',
    source: 'https://github.com/enkidevs/curriculum/blob/master/javascript/ecmascript-2015/dummy-workout/let-and-const-in-es6.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'feature',
  ],
  card: {
    question: '<p><code>const</code> can be used to create ??? variables, whereas <code>let</code> can be used to create ??? variables. <code>const</code> and <code>let</code> can be used to create ???-scoped variables.</p>\n',
    answers: [
      {
        text: 'immutable',
      },
      {
        text: 'mutable',
      },
      {
        text: 'block',
      },
    ],
    comment: "<p>ES6 introduces <code>let</code> and <code>const</code>. You can use these to create variables that are <strong>block-scoped</strong>.</p>\n<p>In ES5 <code>var</code> variables are <strong>function-scoped</strong>.</p>\n<p>You can use <code>const</code> to create <strong>constant</strong>  variables:</p>\n<pre><code>'use strict'; // needed\nconst c = 'Enki';\nc = 'Noki'; // Error\n</code></pre>\n<p>This does not mean the variable is <em>immutable</em>, just that it cannot be reassigned.</p>\n<p>In a loop the <code>const</code> variable is created again in each iteration, so it can be given a different value each time.</p>\n<p>You can use <code>let</code> to create <strong>mutable</strong> variables. If you declare a variable in a loop using <code>let</code>, you get a new binding for each iteration. This can be used in <code>for</code>, <code>for-in</code> and <code>for-of</code> loops:</p>\n<pre><code>for (let i=0; i &#x3C; 3; i++) {\n    ...\n}\n</code></pre>\n",
  },
}
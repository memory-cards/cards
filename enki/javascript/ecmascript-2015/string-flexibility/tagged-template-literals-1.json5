{
  __meta__: {
    author: 'lizTheDeveloper',
    source: 'https://github.com/enkidevs/curriculum/blob/master/javascript/ecmascript-2015/string-flexibility/tagged-template-literals.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'feature',
    'new',
    'workout',
    'introduction',
    'strings',
    'es6',
  ],
  card: {
    question: '<p>Complete the following code snippet to assemble a template string that says <code>"Stay Hungry Stay Foolish"</code>.</p>\n<pre><code class="language-javascript">let attr = "Hungry" ;\nlet attr2 = "Foolish";\n\nlet line = `Stay ??? Stay ???`;\n</code></pre>\n',
    answers: [
      {
        text: '${attr}',
      },
      {
        text: '${attr2}',
      },
      {
        text: '#{attr}',
      },
      {
        text: '%s',
      },
      {
        text: '$(attr)',
      },
      {
        text: '#(attr)',
      },
      {
        text: '#{attr2}',
      },
      {
        text: '$(attr2)',
      },
      {
        text: '#(attr2)',
      },
    ],
    comment: '<p>ES6 introduces a new feature called template strings that make it easier to work with strings by adding string interpolation and multi-line strings:</p>\n<pre><code>let company = "Enki";\nconsole.log(`Hello ${company}!`);\n//prints: "Hello Enki!"\n</code></pre>\n<p>Template literals are denoted by the OÃÅ character, rather than <code>\'\'</code> or <code>""</code>. When you use template strings, you can have multiline strings:</p>\n<pre><code>let aMultilineString = `\nHello\nI am a multiline string\n`\n</code></pre>\n<p>As well as embedding <em>any</em> JavaScript expression inside of a pair of curly braces prefixed by a dollar sign: <code>${5 + 5}</code>. The expression will be cast to a string, then replaced inside the template string.</p>\n<pre><code>let item = "Oranges";\nlet itemPrice = 2.50;\nlet money = 10;\nlet compositeString = `Hi,\nI have ${money} dollars,\nand I would like to purchase :\n${itemPrice / money} ${item}s.\n`\n\nconsole.log(compositeString);\n</code></pre>\n<p>The above would output:</p>\n<pre><code>Hi,\nI have 10 dollars,\nand I would like to purchase :\n4 Oranges.\n</code></pre>\n',
  },
}
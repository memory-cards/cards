{
  __meta__: {
    author: 'catalin',
    source: 'https://github.com/enkidevs/curriculum/blob/master/javascript/react/props-i/enhanced-prop-validation.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'how to',
  ],
  card: {
    question: '<p>Validate if <code>myProp</code> is an instance of the <code>Enki</code> class:</p>\n<pre><code class="language-jsx">function Test(props) {\n  return &#x3C;p>Testing props..&#x3C;/p>;\n}\n\nTest.propTypes = {\n  myProp = React.???\n              .???(???),\n};\n</code></pre>\n',
    answers: [
      {
        text: '<code>PropTypes</code>',
      },
      {
        text: '<code>instanceOf</code>',
      },
      {
        text: '<code>Enki</code>',
      },
      {
        text: '<code>enki</code>',
      },
      {
        text: '<code>ObjectOf</code>',
      },
      {
        text: '<code>PropType</code>',
      },
      {
        text: '<code>propType</code>',
      },
      {
        text: '<code>oneOf</code>',
      },
    ],
    comment: '<p>In addition to standard <em>prop validations</em> for <em>JavaScript</em> primitives there are other types available through <code>React.PropTypes</code>.</p>\n<p>Validate for anything that can be rendered (e.g. numbers, strings, elements or even an array containing these types):</p>\n<pre><code class="language-jsx">myNode: React.PropTypes.node,\n</code></pre>\n<p>Validate for a React element:</p>\n<pre><code class="language-jsx">myElem: React.PropTypes.element,\n</code></pre>\n<p>Validate for an instance of a class (using <code>instanceof</code> operator):</p>\n<pre><code class="language-jsx">myEnki: React.PropTypes.instanceof(Enki),\n</code></pre>\n<p>Validate for specific values treating it as an <code>enum</code>:</p>\n<pre><code class="language-jsx">myEnum: React.PropTypes.oneOf([\'a\', \'b\']),\n</code></pre>\n<p>Validate for multiple types simultaneously:</p>\n<pre><code class="language-jsx">myProp: React.PropTypes.oneOfType([\n React.PropTypes.string,\n React.PropTypes.instanceOf(Enki),\n]),\n</code></pre>\n<p>Validate for an array of a certain type:</p>\n<pre><code class="language-jsx">myArray: React.PropTypes.arrayOf(\n  React.PropTypes.bool),\n</code></pre>\n<p>Validate for an object with prop values of a certain type:</p>\n<pre><code class="language-jsx">myObjOf: React.PropTypes.objectOf(\n  React.PropTypes.number),\n</code></pre>\n',
  },
}
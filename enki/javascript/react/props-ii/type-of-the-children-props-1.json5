{
  __meta__: {
    author: 'tommarshall',
    source: 'https://github.com/enkidevs/curriculum/blob/master/javascript/react/props-ii/type-of-the-children-props.md',
  },
  type: 'choose_options',
  lang: 'en',
  tags: [
    'enki',
    'tip',
  ],
  card: {
    question: '<p>Consider there is a single child in your component. What will <code>this.props.children</code> return?</p>\n<p>???</p>\n',
    answers: [
      {
        text: 'only the child',
        correct: true,
      },
      {
        text: 'an array with just the children in it',
        correct: false,
      },
      {
        text: 'an array of possible children',
        correct: false,
      },
      {
        text: 'an array with the children and the parent component',
        correct: false,
      },
    ],
    comment: "<p>Generally, a components children, <code>this.props.children</code>, would be an array of components.</p>\n<p>When there is a single child, <code>this.props.children</code> will be the the single child component itself <em>without the array wrapper</em>, hence saving the allocation of an array.</p>\n<p>The example shows both with and without an array allocation:</p>\n<pre><code class=\"language-javascript\">var Wrapper = React.createClass({\n  componentDidMount: function() {\n    console.log(\n      Array.isArray(this.props.children)\n    );\n  }\n  render: function() {\n      return &#x3C;div />;\n  }\n});\n\n// an array of components\nReactDOM.render(\n  &#x3C;Wrapper>&#x3C;span/>&#x3C;span/>\n         &#x3C;span/>&#x3C;/Wrapper>,\n  document.getElementById('foo')\n);\n// true\n\n// single child (no array allocation)\nReactDOM.render(\n  &#x3C;Wrapper>hello&#x3C;/Wrapper>,\n  document.getElementById('foo2')\n);\n// false\n</code></pre>\n",
  },
}
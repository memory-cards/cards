{
  __meta__: {
    author: 'catalin',
    source: 'https://github.com/enkidevs/curriculum/blob/master/javascript/npm/features-ii/passing-through-command-line-arguments-in-npm-scripts.md',
  },
  type: 'choose_sequence',
  lang: 'en',
  tags: [
    'enki',
    'feature',
    'introduction',
    'workout',
    'deep',
  ],
  card: {
    question: '<p>Consider an npm script called <code>doSomething</code>. Run it via npm, passing \'enki\' as an argument to it:</p>\n<pre><code class="language-bash">$ ??? ??? ??? ??? ???\n</code></pre>\n',
    answers: [
      {
        text: 'npm',
      },
      {
        text: 'run',
      },
      {
        text: 'doSomething',
      },
      {
        text: '--',
      },
      {
        text: '"enki"',
      },
      {
        text: 'add',
      },
      {
        text: 'runWithArgs',
      },
      {
        text: 'process.argv[0]',
      },
    ],
    comment: '<p><code>npm</code> package manager provides a feature that lets users pass in command line arguments using the <code>--</code> characters. Note that there is a blank space after the two dashes.</p>\n<p>For example, if we have the following scripts:</p>\n<pre><code class="language-json">"scripts" {\n  // other scripts\n  "start:test" : "npm start -- 4000",\n  "start:stage" : "npm start -- 5000"\n}\n</code></pre>\n<p>When running either <code>start:test</code>  or <code>start:stage</code> scripts, the first command line argument provided will be <code>4000</code> or <code>5000</code> depending on our choice.</p>\n<p>To access these arguments the <code>process.argv</code> array can be used. In our case <code>process.argv[2]</code> represents the first argument provided as <code>[0 ]</code> is <code>node</code> and <code>[1 ]</code> is the path to the <code>.js</code> file.</p>\n<p>Alternatively you can provide <code>--</code> when calling a script directly:</p>\n<pre><code class="language-bash">$ npm run someCommand -- --arg=value\n</code></pre>\n',
  },
}